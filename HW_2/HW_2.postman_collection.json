{
	"info": {
		"_postman_id": "f12d5e9f-2e58-4108-889b-05b7743b8c57",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20387980"
	},
	"item": [
		{
			"name": "ep_1 / first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							"\r",
							"// Проверка типа body на string\r",
							"pm.test(\"Type of body is string\", function () {\r",
							"    pm.expect(pm.response.text()).to.be.a('String');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": [
				{
					"name": "ep_1 / first",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "39"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Mon, 13 Jun 2022 12:38:45 GMT"
						}
					],
					"cookie": [],
					"body": "This is the first responce from server!"
				}
			]
		},
		{
			"name": "ep_2 / user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Проверить, что name в ответе равно name s request (name вбить руками.)\", function () {\r",
							"    pm.expect(jsonData.name).to.deep.eql(\"Azat\");\r",
							"});\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Проверить, что age в ответе равно age s request (age вбить руками.)\", function () {\r",
							"    pm.expect(jsonData.age).to.deep.eql(\"33\");\r",
							"});\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Проверить, что salary в ответе равно salary s request (salary вбить руками.)\", function () {\r",
							"    pm.expect(jsonData.salary).to.deep.eql(50000);\r",
							"});\r",
							"\r",
							"// 7. Спарсить request.\r",
							"let json_request = request.data;\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"8. Проверить, что name в ответе равно name s request (name забрать из request.)\", function () {\r",
							"    pm.expect(jsonData.name).to.deep.eql(json_request.name);\r",
							"});\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"9. Проверить, что age в ответе равно age s request (age забрать из request.)\", function () {\r",
							"    pm.expect(jsonData.age).to.deep.eql(json_request.age);\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\", function () {\r",
							"    pm.expect(pm.response.json().salary).to.deep.eql(+json_request.salary);\r",
							"});\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log(jsonData.family)\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.deep.eql(json_request.salary*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Azat",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "50000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": [
				{
					"name": "ep_2 / user_info_3",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Azat",
									"type": "text"
								},
								{
									"key": "age",
									"value": "33",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "50000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_3",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "225"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Mon, 13 Jun 2022 12:39:16 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": \"33\",\n    \"family\": {\n        \"children\": [\n            [\n                \"Alex\",\n                24\n            ],\n            [\n                \"Kate\",\n                12\n            ]\n        ],\n        \"u_salary_1_5_year\": 200000\n    },\n    \"name\": \"Azat\",\n    \"salary\": 50000\n}"
				}
			]
		},
		{
			"name": "ep_3 /object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"//4. Спарсить request.\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"5. Проверить, что name в ответе равно name s request (name забрать из request.)\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Azat\");\r",
							"    \r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"6. Проверить, что age в ответе равно age s request (age забрать из request.)\",function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"33\");\r",
							"})\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\",function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"console.log (jsonData.family);\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"9. Проверить, что у параметра dog есть параметры name.\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"10. Проверить, что у параметра dog есть параметры age.\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"11. Проверить, что параметр name имеет значение Luky.\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"12. Проверить, что параметр age имеет значение 4.\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Azat&age=33&salary=50000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Azat"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "50000"
						}
					]
				}
			},
			"response": [
				{
					"name": "ep_3 /object_info_3",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_3?name=Azat&age=33&salary=50000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Azat"
								},
								{
									"key": "age",
									"value": "33"
								},
								{
									"key": "salary",
									"value": "50000"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "380"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Mon, 13 Jun 2022 12:39:35 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": \"33\",\n    \"family\": {\n        \"children\": [\n            [\n                \"Alex\",\n                24\n            ],\n            [\n                \"Kate\",\n                12\n            ]\n        ],\n        \"pets\": {\n            \"cat\": {\n                \"age\": 3,\n                \"name\": \"Sunny\"\n            },\n            \"dog\": {\n                \"age\": 4,\n                \"name\": \"Luky\"\n            }\n        },\n        \"u_salary_1_5_year\": 200000\n    },\n    \"name\": \"Azat\",\n    \"salary\": 50000\n}"
				}
			]
		},
		{
			"name": "ep_4 /object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"let res = pm.response.json()\r",
							"\r",
							"//4. Спарсить request.\r",
							"// let req = request.data;\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test (\"5. Проверить, что name в ответе равно name s request (name забрать из request.)\", function () {\r",
							"    pm.expect(res.name).to.eql(\"Azat\");\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"6. Проверить, что age в ответе равно age из request (age забрать из request.)\", function () {\r",
							"    pm.expect(res.age).to.eql(33);\r",
							"});\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"console.log(req.salary);\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log(res.salary);\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(res.salary[0]);\r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(res.salary[1]);\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(res.salary[2]);\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\", function () {\r",
							"    pm.expect(res.salary[0]).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\",function() {\r",
							"    pm.expect(+res.salary[1]).to.eql(req.salary*2);\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\", function() {\r",
							"    pm.expect(+res.salary[2]).to.eql(req.salary*3);\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"pm.environment.set(\"name\",res.name);\r",
							"\r",
							"//16. Создать в окружении переменную age\r",
							"pm.environment.set(\"age\",res.age);\r",
							"\r",
							"//17. Создать в окружении переменную salary\r",
							"pm.environment.set(\"salary\",res.salary);\r",
							"\r",
							"//18. Передать в окружение переменную name\r",
							"pm.environment.get(\"name\");\r",
							"\r",
							"//19. Передать в окружение; переменную age\r",
							"pm.environment.get(\"age\")\r",
							"\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.environment.get(\"salary\");\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"console.log(res.salary.length);\r",
							"for (index=0; index<res.salary.length; ++index) {\r",
							"    console.log(res.salary[index]);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Azat&age=33&salary=50000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Azat"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "50000"
						}
					]
				}
			},
			"response": [
				{
					"name": "ep_4 /object_info_4",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_4?name=Azat&age=33&salary=50000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Azat"
								},
								{
									"key": "age",
									"value": "33"
								},
								{
									"key": "salary",
									"value": "50000"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "95"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Mon, 13 Jun 2022 12:39:42 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": 33,\n    \"name\": \"Azat\",\n    \"salary\": [\n        50000,\n        \"100000\",\n        \"150000\"\n    ]\n}"
				}
			]
		},
		{
			"name": "ep_5 /user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Вставить параметр salary из окружения в request\r",
							"let salary_body = request.data.salary;\r",
							"console.log(salary_body);\r",
							"\r",
							"//2. Вставить параметр age из окружения в age\r",
							"let age_body = request.data.age;\r",
							"console.log(age_body);\r",
							"\r",
							"//3. Вставить параметр name из окружения в name\r",
							"let name_body = request.data.name;\r",
							"console.log(name_body);\r",
							"\r",
							"//4. Отправить запрос.\r",
							"\r",
							"//5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//6. Спарсить response body в json.\r",
							"let res = pm.response.json();\r",
							"\r",
							"//7. Спарсить request.\r",
							"//let req = pm.request.url.query.toObject();\r",
							"let req = request.data\r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"8. Проверить, что json response имеет параметр start_qa_salary\", function () {\r",
							"    pm.expect(res).to.have.property(\"start_qa_salary\");\r",
							"    \r",
							"});\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"9. Проверить, что json response имеет параметр qa_salary_after_6_months\", function() {\r",
							"    pm.expect(res).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"10. Проверить, что json response имеет параметр qa_salary_after_12_months\", function() {\r",
							"    pm.expect(res).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\", function() {\r",
							"    pm.expect(res).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\", function() {\r",
							"    pm.expect(res).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"13. Проверить, что json response имеет параметр person\", function() {\r",
							"    pm.expect(res).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"let req_salary = req.salary;\r",
							"\r",
							"pm.test(\"14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\", function() {\r",
							"    pm.expect(res.start_qa_salary).to.eql(+req_salary);\r",
							"});\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\", function() {\r",
							"    pm.expect(res.qa_salary_after_6_months).to.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\",function(){\r",
							"    pm.expect(res[\"qa_salary_after_12_months\"]).to.eql(req.salary*2.7);\r",
							"});\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\", function() {\r",
							"    pm.expect(res[\"qa_salary_after_1.5_year\"]).to.eql(req.salary*3.3);\r",
							"});\r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\", function() {\r",
							"    pm.expect(res[\"qa_salary_after_3.5_years\"]).to.eql(req.salary*3.8);\r",
							"});\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\", function() {\r",
							"    pm.expect(res.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\", function() {\r",
							"    pm.expect(res.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\", function() {\r",
							"    pm.expect(res.person.u_salary_5_years).to.eql(req.salary*4.2);\r",
							"});\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"for(key in res.person) {console.log(key)};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Azat",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "50000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Azat",
							"disabled": true
						},
						{
							"key": "age",
							"value": "33",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "50000",
							"disabled": true
						}
					]
				}
			},
			"response": [
				{
					"name": "ep_5 /user_info_2",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Azat",
									"type": "text"
								},
								{
									"key": "age",
									"value": "33",
									"contentType": "",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "50000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_2",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "Azat",
									"disabled": true
								},
								{
									"key": "age",
									"value": "33",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "50000",
									"disabled": true
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "328"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Mon, 13 Jun 2022 12:39:49 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"person\": {\n        \"u_age\": 33,\n        \"u_name\": [\n            \"Azat\",\n            50000,\n            33\n        ],\n        \"u_salary_5_years\": 210000\n    },\n    \"qa_salary_after_1.5_year\": 165000,\n    \"qa_salary_after_12_months\": 135000,\n    \"qa_salary_after_3.5_years\": 190000,\n    \"qa_salary_after_6_months\": 100000,\n    \"start_qa_salary\": 50000\n}"
				}
			]
		}
	]
}